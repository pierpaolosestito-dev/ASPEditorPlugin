% KNAPSACK
% --------------------------------------------------------------------------------------------------
% Given a set of items, each with a weight and a value, determine which items to include in the
% collection so that the total weight is less than or equal to a given limit and the total value is
% as large as possible.

in(X)|out(X) :- object(X,_,_).
:- capacity(C), not #sum{Y,X : object(X,Y,_), in(X)} <= C.
:~ out(X),object(X,_,Y). [Y@1,X]