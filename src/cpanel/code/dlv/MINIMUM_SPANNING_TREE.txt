% MINIMUM SPANNING TREE
% ------------------------------------------------------------------------------------------------
% Given a weighted graph by means of edge(Node1,Node2,Cost),node(N), and a starting node root(N) 
% compute a tree that starts at a root node, spans that graph, and has minimum cost

root(1).
node(2). node(3). node(4). node(5). node(6).

edge(1,2,1). edge(2,1,1). edge(1,4,4). edge(4,1,4).
edge(1,5,3). edge(5,1,3). edge(2,5,2). edge(5,2,2).
edge(2,4,4). edge(4,2,4). edge(3,5,4). edge(5,3,4).
edge(3,6,5). edge(6,3,5). edge(4,5,4). edge(5,4,4).
edge(5,6,7). edge(6,5,7).

%Guess the edges that are part of the tree:
inTree(X,Y) | outTree(X,Y) :- edge(X,Y,C). 

%Check that we are really dealing with a tree!
:- root(X), inTree(_,X). 
:- inTree(X,Y), inTree(X1,Y), X <> X1. 
%and the tree is connected
:- node(X), not reached(X).
%Minimize the cost of the tree
:~ inTree(X,Y), edge(X,Y,C). [C@1, X,Y,C]

reached(X) :- root(X).
reached(X) :- reached(Y), inTree(Y,X).